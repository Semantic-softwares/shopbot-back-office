import{a as f}from"./chunk-RUZ72OGJ.js";import{a as x}from"./chunk-AGZJ637K.js";import{B as m}from"./chunk-DWCYWQVU.js";import{E as o,W as g,aa as d,fa as p,h as u,n as l,s as a,y as b}from"./chunk-5AECHVKR.js";var S=class c{http=p(m);roomsService=p(f);baseUrl=`${x.apiUrl}/reservations`;reservationsSubject=new u([]);reservations$=this.reservationsSubject.asObservable();loadingSubject=new u(!1);loading$=this.loadingSubject.asObservable();errorSubject=new u(null);error$=this.errorSubject.asObservable();getReservations(r){this.loadingSubject.next(!0),this.errorSubject.next(null);let t=new URLSearchParams;r&&Object.entries(r).forEach(([s,n])=>{n!=null&&t.append(s,n.toString())});let e=`${this.baseUrl}?${t.toString()}`;return console.log("Fetching reservations from:",e),console.log("Query params object:",r),this.http.get(e).pipe(a(s=>{if(console.log("Raw API response:",s),Array.isArray(s)){let n={reservations:s,total:s.length};return this.reservationsSubject.next(s),this.loadingSubject.next(!1),n}else return this.reservationsSubject.next(s.reservations||[]),this.loadingSubject.next(!1),s}),o(s=>(console.error("Error fetching reservations:",s),this.errorSubject.next("Failed to load reservations"),this.loadingSubject.next(!1),l({reservations:[],total:0}))))}getReservationById(r){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.get(`${this.baseUrl}/${r}`).pipe(a(t=>(this.loadingSubject.next(!1),t)),o(t=>(console.error("Error fetching reservation:",t),this.errorSubject.next("Failed to load reservation"),this.loadingSubject.next(!1),l(null))))}createReservation(r){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.post(this.baseUrl,r).pipe(a(t=>{this.loadingSubject.next(!1);let e=this.reservationsSubject.value;return this.reservationsSubject.next([t,...e]),t}),o(t=>{throw console.error("Error creating reservation:",t),this.errorSubject.next("Failed to create reservation"),this.loadingSubject.next(!1),t}))}updateReservation(r,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${r}`,t).pipe(a(e=>{this.loadingSubject.next(!1);let n=this.reservationsSubject.value.map(i=>i._id===r?e:i);return this.reservationsSubject.next(n),e}),o(e=>{throw console.error("Error updating reservation:",e),this.errorSubject.next("Failed to update reservation"),this.loadingSubject.next(!1),e}))}changeRooms(r,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${r}/change-room`,t).pipe(a(e=>{if(this.loadingSubject.next(!1),e.data){let n=this.reservationsSubject.value.map(i=>i._id===r?e.data:i);this.reservationsSubject.next(n)}return e}),o(e=>{throw console.error("Error changing rooms:",e),this.errorSubject.next("Failed to change rooms"),this.loadingSubject.next(!1),e}))}deleteReservation(r){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.delete(`${this.baseUrl}/${r}`).pipe(a(()=>{this.loadingSubject.next(!1);let e=this.reservationsSubject.value.filter(s=>s._id!==r);return this.reservationsSubject.next(e),!0}),o(t=>(console.error("Error deleting reservation:",t),this.errorSubject.next("Failed to delete reservation"),this.loadingSubject.next(!1),l(!1))))}checkInReservation(r){return this.updateReservation(r,{status:"checked_in",actualCheckInDate:new Date})}checkOutReservation(r){return this.updateReservation(r,{status:"checked_out",actualCheckOutDate:new Date})}cancelReservation(r,t){return this.updateReservation(r,{status:"cancelled",cancellation:{isCancelled:!0,cancelledAt:new Date,reason:t}})}updateReservationStatus(r,t){let e={status:t};return t==="checked_in"?e.actualCheckInDate=new Date:t==="checked_out"&&(e.actualCheckOutDate=new Date),this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${r}`,e).pipe(a(s=>{this.loadingSubject.next(!1);let i=this.reservationsSubject.value.map(h=>h._id===r?s:h);return this.reservationsSubject.next(i),s}),o(s=>{console.error("Error updating reservation status:",s),this.loadingSubject.next(!1);let n="Failed to update reservation status";throw s.error?.error?n=s.error.error:s.message&&(n=s.message),this.errorSubject.next(n),new Error(n)}))}reopenReservation(r,t,e){this.loadingSubject.next(!0),this.errorSubject.next(null);let s={pin:t,reason:e||"Reopened with owner authorization"};return this.http.put(`${this.baseUrl}/${r}/reopen`,s).pipe(a(n=>{this.loadingSubject.next(!1);let i=n.reservation||n,j=this.reservationsSubject.value.map(v=>v._id===r?i:v);return this.reservationsSubject.next(j),i}),o(n=>{console.error("Error reopening reservation:",n),this.loadingSubject.next(!1);let i="Failed to reopen reservation";throw n.error?.error?i=n.error.error:n.message&&(i=n.message),this.errorSubject.next(i),new Error(i)}))}getReservationsForCalendar(r,t,e){return this.getReservations({storeId:e,dateFrom:r.toISOString().split("T")[0],dateTo:t.toISOString().split("T")[0]}).pipe(a(s=>s.reservations))}clearError(){this.errorSubject.next(null)}getFrontDeskOverview(r){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.get(`${this.baseUrl}/front-desk/overview/${r}`).pipe(a(t=>(this.loadingSubject.next(!1),t)),o(t=>{this.loadingSubject.next(!1);let e="Failed to fetch front desk overview";throw t.error?.error?e=t.error.error:t.message&&(e=t.message),this.errorSubject.next(e),new Error(e)}))}getTodaysCheckIns(r){return this.http.get(`${this.baseUrl}/front-desk/check-in-today/${r}`).pipe(a(t=>t.arrivals),o(t=>(this.errorSubject.next("Failed to fetch today's check-ins"),l([]))))}getTodaysCheckOuts(r){return this.http.get(`${this.baseUrl}/front-desk/check-out-today/${r}`).pipe(a(t=>t.departures),o(t=>(this.errorSubject.next("Failed to fetch today's check-outs"),l([]))))}getInHouseGuests(r){return this.http.get(`${this.baseUrl}/front-desk/in-house/${r}`).pipe(a(t=>t.inHouseGuests),o(t=>(this.errorSubject.next("Failed to fetch in-house guests"),l([]))))}checkInReservationWithRooms(r,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${r}/check-in-with-rooms`,t||{}).pipe(g(e=>{let s=e.rooms.map(n=>{let i=typeof n.room=="string"?n.room:n.room._id;return this.roomsService.getRoom(i)});return b(s).pipe(a(()=>(this.loadingSubject.next(!1),e)))}),o(e=>{this.loadingSubject.next(!1);let s="Failed to check in guest";throw e.error?.error?s=e.error.error:e.message&&(s=e.message),this.errorSubject.next(s),new Error(s)}))}checkOutReservationWithRooms(r,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${r}/check-out-with-rooms`,t||{}).pipe(g(e=>{let s=e.rooms.map(n=>{let i=typeof n.room=="string"?n.room:n.room._id;return this.roomsService.getRoom(i)});return b(s).pipe(a(()=>(this.loadingSubject.next(!1),e)))}),o(e=>{this.loadingSubject.next(!1);let s="Failed to check out guest";throw e.error?.error?s=e.error.error:e.message&&(s=e.message),this.errorSubject.next(s),new Error(s)}))}requestEarlyCheckIn(r,t,e){return this.http.post(`${this.baseUrl}/${r}/early-checkin-request`,{requestedTime:t,notes:e}).pipe(o(s=>{throw this.errorSubject.next("Failed to request early check-in"),s}))}requestLateCheckOut(r,t,e){return this.http.post(`${this.baseUrl}/${r}/late-checkout-request`,{requestedTime:t,notes:e}).pipe(o(s=>{throw this.errorSubject.next("Failed to request late check-out"),s}))}changeRoomAssignment(r,t,e,s){return this.http.put(`${this.baseUrl}/${r}/change-room`,{oldRoomId:t,newRoomId:e,reason:s}).pipe(o(n=>{throw this.errorSubject.next("Failed to change room assignment"),n}))}addInternalNotes(r,t){return this.http.patch(`${this.baseUrl}/${r}/notes`,{internalNotes:t}).pipe(o(e=>{throw this.errorSubject.next("Failed to add notes"),e}))}extendStay(r,t,e){return this.http.put(`${this.baseUrl}/${r}/extend-stay`,{newCheckOutDate:t.toISOString(),additionalNights:e}).pipe(o(s=>{throw this.errorSubject.next("Failed to extend stay"),s}))}processPayment(r,t){return this.http.post(`${this.baseUrl}/${r}/payment`,t).pipe(o(e=>{throw this.errorSubject.next("Failed to process payment"),e}))}updatePaymentInfo(r,t){return this.http.put(`${this.baseUrl}/${r}/payment-info`,t).pipe(o(e=>{throw this.errorSubject.next("Failed to update payment information"),e}))}printFolio(r){return this.http.get(`${this.baseUrl}/${r}/folio`,{responseType:"blob"}).pipe(o(t=>{throw this.errorSubject.next("Failed to generate folio"),t}))}requestHousekeeping(r,t){return this.http.post(`${this.baseUrl}/${r}/housekeeping-request`,t).pipe(o(e=>{throw this.errorSubject.next("Failed to request housekeeping"),e}))}sendReservationEmail(r,t){return this.http.post(`${this.baseUrl}/${r}/send-email`,t).pipe(o(e=>{console.error("Error sending reservation email:",e);let s="Failed to send reservation email";throw e.error?.error?s=e.error.error:e.error?.details?s=e.error.details:e.message&&(s=e.message),this.errorSubject.next(s),new Error(s)}))}exportReservationToPDF(r){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.get(`${this.baseUrl}/${r}/export/pdf`,{responseType:"blob"}).pipe(a(t=>(this.loadingSubject.next(!1),t)),o(t=>{this.loadingSubject.next(!1);let e="Failed to export reservation to PDF. Please try again.";throw t.error?.message?e=t.error.message:t.error?.error?e=t.error.error:t.error?.details?e=t.error.details:t.message&&(e=t.message),this.errorSubject.next(e),console.error("Error exporting reservation to PDF:",t),new Error(e)}))}deleteReservationWithPin(r,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.delete(`${this.baseUrl}/${r}/secure`,{body:{pin:t}}).pipe(a(e=>(this.loadingSubject.next(!1),e)),o(e=>{this.loadingSubject.next(!1);let s="Failed to delete reservation. Please try again.";throw e.status===403?s="Invalid store owner PIN. Please check with the store owner for the correct PIN.":e.status===404?s="Reservation not found.":e.error?.message?s=e.error.message:e.error?.error?s=e.error.error:e.message&&(s=e.message),this.errorSubject.next(s),console.error("Error deleting reservation with PIN:",e),new Error(s)}))}requestExtension(r,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.post(`${this.baseUrl}/${r}/extension/request`,t).pipe(a(e=>(this.loadingSubject.next(!1),e)),o(e=>{this.loadingSubject.next(!1);let s="Failed to request extension. Please try again.";throw e.status===400?s=e.error?.error||"Invalid extension request.":e.status===404?s="Reservation not found.":e.status===409?s=e.error?.error||"Extension not available for the selected dates.":e.error?.error?s=e.error.error:e.error?.message&&(s=e.error.message),this.errorSubject.next(s),console.error("Error requesting extension:",e),new Error(s)}))}checkExtensionAvailability(r,t){return this.http.get(`${this.baseUrl}/${r}/extension/availability`,{params:{newCheckOutDate:t}}).pipe(o(e=>(console.error("Error checking extension availability:",e),l({isAvailable:!1,conflictingReservations:[],estimatedCost:0,maxExtensionNights:0,extensionDays:0,roomAvailability:[],message:"Failed to check availability"}))))}approveExtension(r,t,e,s){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${r}/extension/${t}/approve`,{extensionId:t,approvalNotes:e,paymentInfo:s}).pipe(a(n=>(this.loadingSubject.next(!1),n)),o(n=>{this.loadingSubject.next(!1);let i="Failed to approve extension. Please try again.";throw n.status===404?i="Extension or reservation not found.":n.status===409?i=n.error?.error||"Extension has already been processed.":n.error?.error?i=n.error.error:n.error?.message&&(i=n.error.message),this.errorSubject.next(i),console.error("Error approving extension:",n),new Error(i)}))}rejectExtension(r,t,e,s){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${r}/extension/${t}/reject`,{extensionId:t,rejectionReason:e,rejectionNotes:s}).pipe(a(n=>(this.loadingSubject.next(!1),n)),o(n=>{this.loadingSubject.next(!1);let i="Failed to reject extension. Please try again.";throw n.status===404?i="Extension or reservation not found.":n.status===409?i=n.error?.error||"Extension has already been processed.":n.error?.error?i=n.error.error:n.error?.message&&(i=n.error.message),this.errorSubject.next(i),console.error("Error rejecting extension:",n),new Error(i)}))}getReservationExtensions(r){return this.http.get(`${this.baseUrl}/${r}/extensions`).pipe(o(t=>(console.error("Error fetching reservation extensions:",t),l({extensions:[],currentExtension:null}))))}static \u0275fac=function(t){return new(t||c)};static \u0275prov=d({token:c,factory:c.\u0275fac,providedIn:"root"})};export{S as a};
