import{a as S}from"./chunk-HJ3IDALV.js";import{a as m}from"./chunk-AGZJ637K.js";import{B as d}from"./chunk-DWCYWQVU.js";import{E as i,W as b,aa as p,fa as g,h as u,n as l,s as o,y as h}from"./chunk-5AECHVKR.js";var f=class c{http=g(d);roomsService=g(S);baseUrl=`${m.apiUrl}/reservations`;reservationsSubject=new u([]);reservations$=this.reservationsSubject.asObservable();loadingSubject=new u(!1);loading$=this.loadingSubject.asObservable();errorSubject=new u(null);error$=this.errorSubject.asObservable();getReservations(s){this.loadingSubject.next(!0),this.errorSubject.next(null);let t=new URLSearchParams;s&&Object.entries(s).forEach(([r,n])=>{n!=null&&t.append(r,n.toString())});let e=`${this.baseUrl}?${t.toString()}`;return console.log("Fetching reservations from:",e),console.log("Query params object:",s),this.http.get(e).pipe(o(r=>{if(console.log("Raw API response:",r),Array.isArray(r)){let n={reservations:r,total:r.length};return this.reservationsSubject.next(r),this.loadingSubject.next(!1),n}else return this.reservationsSubject.next(r.reservations||[]),this.loadingSubject.next(!1),r}),i(r=>(console.error("Error fetching reservations:",r),this.errorSubject.next("Failed to load reservations"),this.loadingSubject.next(!1),l({reservations:[],total:0}))))}getReservationById(s){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.get(`${this.baseUrl}/${s}`).pipe(o(t=>(this.loadingSubject.next(!1),t)),i(t=>(console.error("Error fetching reservation:",t),this.errorSubject.next("Failed to load reservation"),this.loadingSubject.next(!1),l(null))))}createReservation(s){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.post(this.baseUrl,s).pipe(o(t=>{this.loadingSubject.next(!1);let e=this.reservationsSubject.value;return this.reservationsSubject.next([t,...e]),t}),i(t=>{throw console.error("Error creating reservation:",t),this.errorSubject.next("Failed to create reservation"),this.loadingSubject.next(!1),t}))}updateReservation(s,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${s}`,t).pipe(o(e=>{this.loadingSubject.next(!1);let n=this.reservationsSubject.value.map(a=>a._id===s?e:a);return this.reservationsSubject.next(n),e}),i(e=>{throw console.error("Error updating reservation:",e),this.errorSubject.next("Failed to update reservation"),this.loadingSubject.next(!1),e}))}deleteReservation(s){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.delete(`${this.baseUrl}/${s}`).pipe(o(()=>{this.loadingSubject.next(!1);let e=this.reservationsSubject.value.filter(r=>r._id!==s);return this.reservationsSubject.next(e),!0}),i(t=>(console.error("Error deleting reservation:",t),this.errorSubject.next("Failed to delete reservation"),this.loadingSubject.next(!1),l(!1))))}checkInReservation(s){return this.updateReservation(s,{status:"checked_in",actualCheckInDate:new Date})}checkOutReservation(s){return this.updateReservation(s,{status:"checked_out",actualCheckOutDate:new Date})}cancelReservation(s,t){return this.updateReservation(s,{status:"cancelled",cancellation:{isCancelled:!0,cancelledAt:new Date,reason:t}})}updateReservationStatus(s,t){let e={status:t};return t==="checked_in"?e.actualCheckInDate=new Date:t==="checked_out"&&(e.actualCheckOutDate=new Date),this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${s}`,e).pipe(o(r=>{this.loadingSubject.next(!1);let a=this.reservationsSubject.value.map(v=>v._id===s?r:v);return this.reservationsSubject.next(a),r}),i(r=>{console.error("Error updating reservation status:",r),this.loadingSubject.next(!1);let n="Failed to update reservation status";throw r.error?.error?n=r.error.error:r.message&&(n=r.message),this.errorSubject.next(n),new Error(n)}))}getReservationsForCalendar(s,t,e){return this.getReservations({storeId:e,dateFrom:s.toISOString().split("T")[0],dateTo:t.toISOString().split("T")[0]}).pipe(o(r=>r.reservations))}clearError(){this.errorSubject.next(null)}getFrontDeskOverview(s){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.get(`${this.baseUrl}/front-desk/overview/${s}`).pipe(o(t=>(this.loadingSubject.next(!1),t)),i(t=>{this.loadingSubject.next(!1);let e="Failed to fetch front desk overview";throw t.error?.error?e=t.error.error:t.message&&(e=t.message),this.errorSubject.next(e),new Error(e)}))}getTodaysCheckIns(s){return this.http.get(`${this.baseUrl}/front-desk/check-in-today/${s}`).pipe(o(t=>t.arrivals),i(t=>(this.errorSubject.next("Failed to fetch today's check-ins"),l([]))))}getTodaysCheckOuts(s){return this.http.get(`${this.baseUrl}/front-desk/check-out-today/${s}`).pipe(o(t=>t.departures),i(t=>(this.errorSubject.next("Failed to fetch today's check-outs"),l([]))))}getInHouseGuests(s){return this.http.get(`${this.baseUrl}/front-desk/in-house/${s}`).pipe(o(t=>t.inHouseGuests),i(t=>(this.errorSubject.next("Failed to fetch in-house guests"),l([]))))}checkInReservationWithRooms(s,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${s}/check-in-with-rooms`,t||{}).pipe(b(e=>{let r=e.rooms.map(n=>{let a=typeof n.room=="string"?n.room:n.room._id;return this.roomsService.getRoom(a)});return h(r).pipe(o(()=>(this.loadingSubject.next(!1),e)))}),i(e=>{this.loadingSubject.next(!1);let r="Failed to check in guest";throw e.error?.error?r=e.error.error:e.message&&(r=e.message),this.errorSubject.next(r),new Error(r)}))}checkOutReservationWithRooms(s,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.put(`${this.baseUrl}/${s}/check-out-with-rooms`,t||{}).pipe(b(e=>{let r=e.rooms.map(n=>{let a=typeof n.room=="string"?n.room:n.room._id;return this.roomsService.getRoom(a)});return h(r).pipe(o(()=>(this.loadingSubject.next(!1),e)))}),i(e=>{this.loadingSubject.next(!1);let r="Failed to check out guest";throw e.error?.error?r=e.error.error:e.message&&(r=e.message),this.errorSubject.next(r),new Error(r)}))}requestEarlyCheckIn(s,t,e){return this.http.post(`${this.baseUrl}/${s}/early-checkin-request`,{requestedTime:t,notes:e}).pipe(i(r=>{throw this.errorSubject.next("Failed to request early check-in"),r}))}requestLateCheckOut(s,t,e){return this.http.post(`${this.baseUrl}/${s}/late-checkout-request`,{requestedTime:t,notes:e}).pipe(i(r=>{throw this.errorSubject.next("Failed to request late check-out"),r}))}changeRoomAssignment(s,t,e,r){return this.http.put(`${this.baseUrl}/${s}/change-room`,{oldRoomId:t,newRoomId:e,reason:r}).pipe(i(n=>{throw this.errorSubject.next("Failed to change room assignment"),n}))}addInternalNotes(s,t){return this.http.patch(`${this.baseUrl}/${s}/notes`,{internalNotes:t}).pipe(i(e=>{throw this.errorSubject.next("Failed to add notes"),e}))}extendStay(s,t,e){return this.http.put(`${this.baseUrl}/${s}/extend-stay`,{newCheckOutDate:t.toISOString(),additionalNights:e}).pipe(i(r=>{throw this.errorSubject.next("Failed to extend stay"),r}))}processPayment(s,t){return this.http.post(`${this.baseUrl}/${s}/payment`,t).pipe(i(e=>{throw this.errorSubject.next("Failed to process payment"),e}))}printFolio(s){return this.http.get(`${this.baseUrl}/${s}/folio`,{responseType:"blob"}).pipe(i(t=>{throw this.errorSubject.next("Failed to generate folio"),t}))}requestHousekeeping(s,t){return this.http.post(`${this.baseUrl}/${s}/housekeeping-request`,t).pipe(i(e=>{throw this.errorSubject.next("Failed to request housekeeping"),e}))}sendReservationEmail(s,t){return this.http.post(`${this.baseUrl}/${s}/send-email`,t).pipe(i(e=>{console.error("Error sending reservation email:",e);let r="Failed to send reservation email";throw e.error?.error?r=e.error.error:e.error?.details?r=e.error.details:e.message&&(r=e.message),this.errorSubject.next(r),new Error(r)}))}exportReservationToPDF(s){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.get(`${this.baseUrl}/${s}/export/pdf`,{responseType:"blob"}).pipe(o(t=>(this.loadingSubject.next(!1),t)),i(t=>{this.loadingSubject.next(!1);let e="Failed to export reservation to PDF. Please try again.";throw t.error?.message?e=t.error.message:t.error?.error?e=t.error.error:t.error?.details?e=t.error.details:t.message&&(e=t.message),this.errorSubject.next(e),console.error("Error exporting reservation to PDF:",t),new Error(e)}))}deleteReservationWithPin(s,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.delete(`${this.baseUrl}/${s}/secure`,{body:{pin:t}}).pipe(o(e=>(this.loadingSubject.next(!1),e)),i(e=>{this.loadingSubject.next(!1);let r="Failed to delete reservation. Please try again.";throw e.status===403?r="Invalid store owner PIN. Please check with the store owner for the correct PIN.":e.status===404?r="Reservation not found.":e.error?.message?r=e.error.message:e.error?.error?r=e.error.error:e.message&&(r=e.message),this.errorSubject.next(r),console.error("Error deleting reservation with PIN:",e),new Error(r)}))}static \u0275fac=function(t){return new(t||c)};static \u0275prov=p({token:c,factory:c.\u0275fac,providedIn:"root"})};export{f as a};
